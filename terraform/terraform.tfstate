{
  "version": 4,
  "terraform_version": "1.3.3",
  "serial": 8,
  "lineage": "1e717e77-173a-6416-ff4d-2b6a54929851",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "app",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/stack-io/deployments/webserver",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "aee6a11effb594bbb72fbf8c9e84e182e177a75d7613594c970cab85615b2ec8",
            "live_uid": "3f07fb05-f84a-44d9-ab18-2caf6331cd2a",
            "name": "webserver",
            "namespace": "stack-io",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3f07fb05-f84a-44d9-ab18-2caf6331cd2a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\n# Create deployment;\n# k create deployment webserver --image=webserver --dry-run=client -o yaml \u003e app.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: webserver\n  name: webserver\n  namespace: stack-io\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: webserver\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: webserver\n    spec:\n      # https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n      # add init container that sleep for 30 seconds;\n      initContainers:\n      - name: wait-for-30-seconds-before-starup\n        image: busybox\n        command:  [\"sh\", \"-c\", \"sleep 30\"]\n      containers:\n      # Use the golang webserver image you built in the previous step;\n      - image: webserver\n        imagePullPolicy: IfNotPresent\n        # https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/\n        # Add prestophook;\n        lifecycle:\n          preStop:\n            exec:\n              command: [\"/bin/sh\",\"-c\",\"echo Killing the webserver; while kill -s TERM 1; do sleep 1; done\"]\n        # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/              \n        # Add readiness/livess probe;\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 3      \n        name: webserver\n        ports:\n        - containerPort: 8080\n          name: http\n          protocol: TCP\n        # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/              \n        # Add readiness/livess probe;          \n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 3          \n        resources:\n          limits:\n            cpu: 200m\n            memory: 250Mi\n          requests:\n            cpu: 100m\n            memory: 150Mi        \nstatus: {}\n...",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: webserver\n  name: webserver\n  namespace: stack-io\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: webserver\n  strategy: {}\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: webserver\n    spec:\n      containers:\n      - image: webserver\n        imagePullPolicy: IfNotPresent\n        lifecycle:\n          preStop:\n            exec:\n              command:\n              - /bin/sh\n              - -c\n              - echo Killing the webserver; while kill -s TERM 1; do sleep 1; done\n        livenessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 3\n        name: webserver\n        ports:\n        - containerPort: 8080\n          name: http\n          protocol: TCP\n        readinessProbe:\n          failureThreshold: 3\n          httpGet:\n            path: /\n            port: 8080\n            scheme: HTTP\n          initialDelaySeconds: 5\n          periodSeconds: 10\n          successThreshold: 1\n          timeoutSeconds: 3\n        resources:\n          limits:\n            cpu: 200m\n            memory: 250Mi\n          requests:\n            cpu: 100m\n            memory: 150Mi\n      initContainers:\n      - command:\n        - sh\n        - -c\n        - sleep 30\n        image: busybox\n        name: wait-for-30-seconds-before-starup\nstatus: {}\n",
            "yaml_incluster": "aee6a11effb594bbb72fbf8c9e84e182e177a75d7613594c970cab85615b2ec8"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubectl_manifest.namespace"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "namespace",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/stack-io",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "2bb9c7505986ca272bd4eb9373e8e2026504c036a21d21982dbee2caac44eb33",
            "live_uid": "4e24ce0d-93b8-440f-8336-76df92f1a7dc",
            "name": "stack-io",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "4e24ce0d-93b8-440f-8336-76df92f1a7dc",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\n# Create namespace;\n# k create namespace stack-io --dry-run=client -o yaml\napiVersion: v1\nkind: Namespace\nmetadata:\n  creationTimestamp: null\n  name: stack-io\nspec: {}\nstatus: {}\n...",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  creationTimestamp: null\n  name: stack-io\nspec: {}\nstatus: {}\n",
            "yaml_incluster": "2bb9c7505986ca272bd4eb9373e8e2026504c036a21d21982dbee2caac44eb33"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/webserver",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "17de64880665a26b2f8495a9705e158504c15def57adf5371cd428e78e4ddf47",
            "live_uid": "c92bbfd7-f6a9-4370-bec1-f5f264f15508",
            "name": "webserver",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c92bbfd7-f6a9-4370-bec1-f5f264f15508",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "---\n# Create service to expose your pod;\n# kubectl expose deployment/webserver --dry-run=client -o yaml\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: webserver\n  name: webserver\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: webserver\nstatus:\n  loadBalancer: {}\n...",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: webserver\n  name: webserver\nspec:\n  ports:\n  - port: 8080\n    protocol: TCP\n    targetPort: 8080\n  selector:\n    app: webserver\nstatus:\n  loadBalancer: {}\n",
            "yaml_incluster": "17de64880665a26b2f8495a9705e158504c15def57adf5371cd428e78e4ddf47"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubectl_manifest.app",
            "kubectl_manifest.namespace"
          ]
        }
      ]
    }
  ],
  "check_results": []
}
